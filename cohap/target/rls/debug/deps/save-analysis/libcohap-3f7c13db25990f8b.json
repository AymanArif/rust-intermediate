{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ayman/Desktop/rust-intermedite/cohap","program":"/home/ayman/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":[],"output":"/home/ayman/Desktop/rust-intermedite/cohap/target/rls/debug/deps/libcohap-3f7c13db25990f8b.rmeta"},"prelude":{"crate_id":{"name":"cohap","disambiguator":[14065007922551204159,18144145932080110403]},"crate_root":"src","external_crates":[{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":15,"id":{"name":"crossbeam","disambiguator":[8955231447749642621,11215111726859518098]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":16,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":17,"id":{"name":"crossbeam_epoch","disambiguator":[4734424276384925695,15755126270590407988]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":18,"id":{"name":"maybe_uninit","disambiguator":[9925295721960399709,5075810066591430732]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[768677321291891816,15241007223462336386]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":20,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":21,"id":{"name":"memoffset","disambiguator":[7093462231384929601,15510462489894624649]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":22,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":23,"id":{"name":"crossbeam_deque","disambiguator":[13451153652030510261,8662342338441898435]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":24,"id":{"name":"crossbeam_channel","disambiguator":[17902891828753594669,4651181517024749182]}},{"file_name":"/home/ayman/Desktop/rust-intermedite/cohap/src/node.rs","num":25,"id":{"name":"crossbeam_queue","disambiguator":[3507558766344906836,8951663388835866331]}}],"span":{"file_name":"src/lib.rs","byte_start":1,"byte_end":1603,"line_start":2,"line_end":44,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":2959},"span":{"file_name":"src/node.rs","byte_start":1635,"byte_end":1645,"line_start":1,"line_end":1,"column_start":16,"column_end":26},"alias_span":null,"name":"UnsafeCell","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":17,"index":58},"span":{"file_name":"src/node.rs","byte_start":1669,"byte_end":1675,"line_start":2,"line_end":2,"column_start":23,"column_end":29},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":10}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/lib.rs","byte_start":1,"byte_end":1603,"line_start":2,"line_end":44,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3},"span":{"file_name":"src/lib.rs","byte_start":338,"byte_end":354,"line_start":10,"line_end":10,"column_start":7,"column_end":23},"name":"MAXIMUM_CAPACITY","qualname":"::MAXIMUM_CAPACITY","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" ---------------- Constants -------------- \n The largest possible table capacity.  This value must be\n exactly 1<<30 to stay within Java array allocation and indexing\n bounds for power of two table sizes, and is further required\n because the top two bits of 32bit hash fields are used for\n control purposes.","sig":null,"attributes":[{"value":"/ ---------------- Constants -------------- ","span":{"file_name":"src/lib.rs","byte_start":1,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":47}},{"value":"/ The largest possible table capacity.  This value must be","span":{"file_name":"src/lib.rs","byte_start":49,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ exactly 1<<30 to stay within Java array allocation and indexing","span":{"file_name":"src/lib.rs","byte_start":110,"byte_end":177,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ bounds for power of two table sizes, and is further required","span":{"file_name":"src/lib.rs","byte_start":178,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ because the top two bits of 32bit hash fields are used for","span":{"file_name":"src/lib.rs","byte_start":243,"byte_end":305,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/ control purposes.","span":{"file_name":"src/lib.rs","byte_start":306,"byte_end":327,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"src/lib.rs","byte_start":328,"byte_end":331,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":4},"span":{"file_name":"src/lib.rs","byte_start":501,"byte_end":517,"line_start":15,"line_end":15,"column_start":7,"column_end":23},"name":"DEFAULT_CAPACITY","qualname":"::DEFAULT_CAPACITY","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The default initial table capacity.  Must be a power of 2\n  (i.e., at least 1) and at most MAXIMUM_CAPACITY.","sig":null,"attributes":[{"value":"/ The default initial table capacity.  Must be a power of 2","span":{"file_name":"src/lib.rs","byte_start":375,"byte_end":436,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/  (i.e., at least 1) and at most MAXIMUM_CAPACITY.","span":{"file_name":"src/lib.rs","byte_start":437,"byte_end":490,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"src/lib.rs","byte_start":491,"byte_end":494,"line_start":14,"line_end":14,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":5},"span":{"file_name":"src/lib.rs","byte_start":829,"byte_end":840,"line_start":23,"line_end":23,"column_start":7,"column_end":18},"name":"LOAD_FACTOR","qualname":"::LOAD_FACTOR","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" The load factor for this table. Overrides of this value in\n constructors affect only the initial table capacity.  The\n actual floating povalue isn't normally used -- it is\n simpler to use expressions such as {@code n - (n >>> 2)} for\n the associated resizing threshold.","sig":null,"attributes":[{"value":"/ The load factor for this table. Overrides of this value in","span":{"file_name":"src/lib.rs","byte_start":533,"byte_end":595,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/ constructors affect only the initial table capacity.  The","span":{"file_name":"src/lib.rs","byte_start":596,"byte_end":657,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/ actual floating povalue isn't normally used -- it is","span":{"file_name":"src/lib.rs","byte_start":658,"byte_end":714,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/ simpler to use expressions such as {@code n - (n >>> 2)} for","span":{"file_name":"src/lib.rs","byte_start":715,"byte_end":779,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ the associated resizing threshold.","span":{"file_name":"src/lib.rs","byte_start":780,"byte_end":818,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"src/lib.rs","byte_start":819,"byte_end":822,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":6},"span":{"file_name":"src/lib.rs","byte_start":1131,"byte_end":1150,"line_start":30,"line_end":30,"column_start":7,"column_end":26},"name":"MIN_TRANSFER_STRIDE","qualname":"::MIN_TRANSFER_STRIDE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Minimum number of rebinnings per transfer step. Ranges are\n subdivided to allow multiple resizer threads.  This value\n serves as a lower bound to avoid resizers encountering\n excessive memory contention.  The value should be at least\n DEFAULT_CAPACITY.\n","sig":null,"attributes":[{"value":"/ Minimum number of rebinnings per transfer step. Ranges are","span":{"file_name":"src/lib.rs","byte_start":856,"byte_end":918,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ subdivided to allow multiple resizer threads.  This value","span":{"file_name":"src/lib.rs","byte_start":919,"byte_end":980,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ serves as a lower bound to avoid resizers encountering","span":{"file_name":"src/lib.rs","byte_start":981,"byte_end":1039,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ excessive memory contention.  The value should be at least","span":{"file_name":"src/lib.rs","byte_start":1040,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ DEFAULT_CAPACITY.","span":{"file_name":"src/lib.rs","byte_start":1103,"byte_end":1124,"line_start":29,"line_end":29,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":7},"span":{"file_name":"src/lib.rs","byte_start":1274,"byte_end":1291,"line_start":34,"line_end":34,"column_start":7,"column_end":24},"name":"RESIZE_STAMP_BITS","qualname":"::RESIZE_STAMP_BITS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bits used for generation stamp in sizeCtl.\n Must be at least 6 for 32bit arrays.\n","sig":null,"attributes":[{"value":"/ The number of bits used for generation stamp in sizeCtl.","span":{"file_name":"src/lib.rs","byte_start":1166,"byte_end":1226,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/ Must be at least 6 for 32bit arrays.","span":{"file_name":"src/lib.rs","byte_start":1227,"byte_end":1267,"line_start":33,"line_end":33,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":8},"span":{"file_name":"src/lib.rs","byte_start":1415,"byte_end":1427,"line_start":38,"line_end":38,"column_start":7,"column_end":19},"name":"MAX_RESIZERS","qualname":"::MAX_RESIZERS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of threads that can help resize.\n Must fit in `32 - RESIZE_STAMP_BITS` bits.\n","sig":null,"attributes":[{"value":"/ The maximum number of threads that can help resize.","span":{"file_name":"src/lib.rs","byte_start":1306,"byte_end":1361,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ Must fit in `32 - RESIZE_STAMP_BITS` bits.","span":{"file_name":"src/lib.rs","byte_start":1362,"byte_end":1408,"line_start":37,"line_end":37,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"src/lib.rs","byte_start":1539,"byte_end":1557,"line_start":41,"line_end":41,"column_start":7,"column_end":25},"name":"RESIZE_STAMP_SHIFT","qualname":"::RESIZE_STAMP_SHIFT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The bit shift for recording size stamp in `sizeCtl`.\n","sig":null,"attributes":[{"value":"/ The bit shift for recording size stamp in `sizeCtl`.","span":{"file_name":"src/lib.rs","byte_start":1476,"byte_end":1532,"line_start":40,"line_end":40,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"src/node.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"node","qualname":"::node","value":"src/node.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":19}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16},"span":{"file_name":"src/node.rs","byte_start":1827,"byte_end":1831,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Node","qualname":"::node::BinEntry::Node","value":"BinEntry::Node(Node<K, V>)","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"src/node.rs","byte_start":1816,"byte_end":1817,"line_start":7,"line_end":7,"column_start":26,"column_end":27},"name":"K","qualname":"::node::BinEntry::K$63","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"src/node.rs","byte_start":1818,"byte_end":1819,"line_start":7,"line_end":7,"column_start":28,"column_end":29},"name":"V","qualname":"::node::BinEntry::V$63","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13},"span":{"file_name":"src/node.rs","byte_start":1807,"byte_end":1815,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"name":"BinEntry","qualname":"::node::BinEntry","value":"BinEntry::{Node}","parent":null,"children":[{"krate":0,"index":16}],"decl_id":null,"docs":" Entry is a bin","sig":null,"attributes":[{"value":"/ Entry is a bin","span":{"file_name":"src/node.rs","byte_start":1678,"byte_end":1696,"line_start":4,"line_end":4,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"src/node.rs","byte_start":1697,"byte_end":1700,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Will _generally_ be `Node`. Any entry that is not first in the bin, will be a `Node` ","span":{"file_name":"src/node.rs","byte_start":1701,"byte_end":1790,"line_start":6,"line_end":6,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":19},"span":{"file_name":"src/node.rs","byte_start":1889,"byte_end":1893,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"name":"Node","qualname":"::node::Node","value":"Node { hash, key, value, next }","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" Key-value entry.  \n","sig":null,"attributes":[{"value":"/ Key-value entry.  ","span":{"file_name":"src/node.rs","byte_start":1848,"byte_end":1870,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":22},"span":{"file_name":"src/node.rs","byte_start":1916,"byte_end":1920,"line_start":15,"line_end":15,"column_start":16,"column_end":20},"name":"hash","qualname":"::node::Node::hash","value":"u64","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":"src/node.rs","byte_start":1942,"byte_end":1945,"line_start":16,"line_end":16,"column_start":16,"column_end":19},"name":"key","qualname":"::node::Node::key","value":"K","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":24},"span":{"file_name":"src/node.rs","byte_start":1965,"byte_end":1970,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"value","qualname":"::node::Node::value","value":"std::cell::UnsafeCell<V>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":25},"span":{"file_name":"src/node.rs","byte_start":2002,"byte_end":2006,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"next","qualname":"::node::Node::next","value":"crossbeam_epoch::atomic::Atomic<node::Node<K, V>>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"src/node.rs","byte_start":1894,"byte_end":1895,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"K","qualname":"::node::Node::K$75","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"src/node.rs","byte_start":1896,"byte_end":1897,"line_start":14,"line_end":14,"column_start":26,"column_end":27},"name":"V","qualname":"::node::Node::V$75","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1450,"byte_end":1467,"line_start":38,"line_end":38,"column_start":42,"column_end":59},"ref_id":{"krate":0,"index":7}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1573,"byte_end":1590,"line_start":41,"line_end":41,"column_start":41,"column_end":58},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":1598,"byte_end":1602,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"src/node.rs","byte_start":1624,"byte_end":1627,"line_start":1,"line_end":1,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"src/node.rs","byte_start":1629,"byte_end":1633,"line_start":1,"line_end":1,"column_start":10,"column_end":14},"ref_id":{"krate":2,"index":2744}},{"kind":"Mod","span":{"file_name":"src/node.rs","byte_start":1651,"byte_end":1660,"line_start":2,"line_end":2,"column_start":5,"column_end":14},"ref_id":{"krate":15,"index":0}},{"kind":"Mod","span":{"file_name":"src/node.rs","byte_start":1662,"byte_end":1667,"line_start":2,"line_end":2,"column_start":16,"column_end":21},"ref_id":{"krate":17,"index":0}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":1832,"byte_end":1836,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"ref_id":{"krate":0,"index":19}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":1837,"byte_end":1838,"line_start":8,"line_end":8,"column_start":15,"column_end":16},"ref_id":{"krate":0,"index":14}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":1839,"byte_end":1840,"line_start":8,"line_end":8,"column_start":17,"column_end":18},"ref_id":{"krate":0,"index":15}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":1947,"byte_end":1948,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"ref_id":{"krate":0,"index":20}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":1972,"byte_end":1982,"line_start":17,"line_end":17,"column_start":23,"column_end":33},"ref_id":{"krate":2,"index":2959}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":1983,"byte_end":1984,"line_start":17,"line_end":17,"column_start":34,"column_end":35},"ref_id":{"krate":0,"index":21}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":2008,"byte_end":2014,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"ref_id":{"krate":17,"index":58}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":2015,"byte_end":2019,"line_start":18,"line_end":18,"column_start":29,"column_end":33},"ref_id":{"krate":0,"index":19}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":2020,"byte_end":2021,"line_start":18,"line_end":18,"column_start":34,"column_end":35},"ref_id":{"krate":0,"index":20}},{"kind":"Type","span":{"file_name":"src/node.rs","byte_start":2022,"byte_end":2023,"line_start":18,"line_end":18,"column_start":36,"column_end":37},"ref_id":{"krate":0,"index":21}}],"macro_refs":[],"relations":[]}